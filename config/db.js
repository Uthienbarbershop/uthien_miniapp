// File: config/db.js (Phi√™n b·∫£n khuy·∫øn ngh·ªã v·ªõi Pool k·∫øt n·ªëi)

// 1. T·∫£i v√† c·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng t·ª´ t·ªáp .env
// ƒê·∫£m b·∫£o r·∫±ng t·ªáp .env c·ªßa b·∫°n n·∫±m ·ªü v·ªã tr√≠ ph√π h·ª£p v·ªõi v·ªã tr√≠ c·ªßa file n√†y.
// V√≠ d·ª•: N·∫øu file n√†y n·∫±m trong 'config/' v√† .env ·ªü th∆∞ m·ª•c g·ªëc, ƒë∆∞·ªùng d·∫´n s·∫Ω l√† '../.env'
require('dotenv').config({ path: '../.env' }); // ƒêi·ªÅu ch·ªânh ƒë∆∞·ªùng d·∫´n n·∫øu c·∫ßn

// 2. T·∫£i th∆∞ vi·ªán MySQL2 (s·ª≠ d·ª•ng b·∫£n promise ƒë·ªÉ l√†m vi·ªác v·ªõi async/await d·ªÖ h∆°n)
const mysql = require('mysql2/promise'); // R·∫•t quan tr·ªçng: S·ª≠ d·ª•ng '/promise'

// Th√™m d√≤ng log m·ªõi ·ªü ƒë√¢y
console.log('üü° ƒêang c·ªë g·∫Øng k·∫øt n·ªëi ƒë·∫øn MySQL...');

// 3. T·∫°o pool k·∫øt n·ªëi
const pool = mysql.createPool({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
  waitForConnections: true, // Ch·ªù n·∫øu kh√¥ng c√≥ k·∫øt n·ªëi n√†o kh·∫£ d·ª•ng
  connectionLimit: 10,      // S·ªë l∆∞·ª£ng k·∫øt n·ªëi t·ªëi ƒëa trong pool
  queueLimit: 0,            // S·ªë l∆∞·ª£ng y√™u c·∫ßu ch·ªù trong h√†ng ƒë·ª£i (0 = kh√¥ng gi·ªõi h·∫°n)
  charset: 'utf8mb4'        // ƒê·∫£m b·∫£o h·ªó tr·ª£ ti·∫øng Vi·ªát v√† emoji
});

// 4. Ki·ªÉm tra k·∫øt n·ªëi pool khi kh·ªüi ƒë·ªông (t√πy ch·ªçn nh∆∞ng r·∫•t n√™n c√≥)
pool.getConnection()
  .then(connection => {
    console.log('‚úÖ ƒê√£ k·∫øt n·ªëi MySQL Pool th√†nh c√¥ng!');
    connection.release(); // Gi·∫£i ph√≥ng k·∫øt n·ªëi tr·ªü l·∫°i pool
  })
  .catch(err => {
    console.error('‚ùå L·ªói k·∫øt n·ªëi MySQL Pool:', err.message);
    // Quan tr·ªçng: D·ª´ng ·ª©ng d·ª•ng n·∫øu kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu
    process.exit(1);
  });

// 5. Xu·∫•t pool ƒë·ªÉ c√°c file kh√°c c√≥ th·ªÉ s·ª≠ d·ª•ng
module.exports = pool;